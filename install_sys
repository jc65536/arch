#!/bin/bash
# Jason's Arch Linux Installation Scripts
# Run this script once chrooted into the installed system

lvm_yes=<LVM_YES_PLACEHOLDER>
esp=<ESP_PLACEHOLDER>

yes_no_prompt () {
    read -p "[INSTALLER] $1" -n 1 -r
    echo
    [[ $REPLY =~ ^[Yy]$ ]]
}

p () {
    echo "[INSTALLER] $1"
}

inp () {
    local -n ref=$2
    read -p "[INSTALLER] $1" ref
}

file_check () {
    p "Double check the contents of $1:"
    if [[ ! -z $2 ]]
    then
        cat $1 | grep $2
    else
        cat $1
    fi
    yes_no_prompt "Does that look correct? (y/n): "
}

ln -sf /usr/share/zoneinfo/America/Los_Angeles /etc/localtime
hwclock --systohc
p "Time zone configuration complete"

sed -i "s/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/" /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" >> /etc/locale.conf
p "Localization configuration complete"

hostname="tiramisu"
echo $host_name >> /etc/hostname
echo -e "127.0.0.1\tlocalhost\n::1\t\tlocalhost\n127.0.1.1\t$hostname" >> /etc/hosts
p "Network configuration complete. You might want to install a network manager."

pacman -S vim

if [[ $lvm_yes == 1 ]]
then
    pacman -S lvm2
    while :
    do
        p "Now, configure mkinitcpio. Add the following hooks to the HOOKS array: keyboard, keymap, encrypt, lvm2"
        p "Example: HOOKS=(base udev autodetect keyboard keymap consolefont modconf block encrypt lvm2 filesystems fsck)"
        inp "Press Enter to continue to vim" x
        vim /etc/mkinitcpio.conf
        p "Example again: HOOKS=(base udev autodetect keyboard keymap consolefont modconf block encrypt lvm2 filesystems fsck)"
        if file_check /etc/mkinitcpio.conf "HOOKS"
        then
            break
        fi
    done
    mkinitcpio -P
fi

pacman -S grub efibootmgr
grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB

if [[ $lvm_yes == 1 ]]
then
    while :
    do
        p "Now, configure GRUB to work with LVM on LUKS."
        lsblk -f
        inp "Enter the correct device UUID for the encrypted device: " uuid
        p "Now edit GRUB_CMDLINE_LINUX_DEFAULT to include the following parameters:"
        params="cryptdevice=UUID=$uuid:cryptlvm root=/dev/vg1/root"
        p $params
        p "While in vim, type \`:read !cat params\` to paste the parameters."
        echo $params >> params
        inp "Press Enter to continue to vim" x
        vim /etc/default/grub
        rm params
        p "Parameters again: $params"
        if file_check /etc/default/grub "GRUB_CMDLINE_LINUX_DEFAULT"
        then
            break
        fi
    done
fi

pacman -S amd-ucode
grub-mkconfig -o /boot/grub/grub.cfg

p "Set the root password."
passwd

# Post Installation

# Users
uname="jason"
useradd -m -G wheel $uname
p "Set the password for user $uname."
passwd $uname

pacman -S sudo
while :
do
    p "In the sudoers file, uncomment the line for the wheel group."
    inp "Press Enter to continue to visudo" x
    visudo
    if file_check /etc/sudoers "wheel"
    then
        break
    fi
done

# Desktop applications
pacman -S gnome firefox networkmanager
systemctl enable NetworkManager.service
systemctl enable gdm.service

p "Type exit to return to the live environment."